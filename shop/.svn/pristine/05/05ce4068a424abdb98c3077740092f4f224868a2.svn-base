package com.shop.controller.user;

import java.io.IOException;
import java.math.BigDecimal;

import net.sf.json.JSONObject;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.shop.controller.base.RequestContext;
import com.shop.entity.Customer;
import com.shop.service.OrderService;
import com.shop.service.ShippingService;
@Component
@RequestMapping(value = "/shopuser/order")
public class OrderController extends RequestContext{
	@Autowired
	private OrderService orderservice;
	@Autowired
	private ShippingService shippingservice;
	/**
	 * 直接下单,不经过购物车
	 * @throws IOException 
	 */
	@ResponseBody
	@RequestMapping(value = "createOrderDirectly", method = RequestMethod.POST,consumes = "application/json")
	public JSONObject CreateOrderDirectly(@RequestBody JSONObject obj) throws IOException{
		int prodAmount = obj.getInt("prodAmount");//商品购买数量
		int addressId = obj.getInt("addressId");//采用的地址模板
		Customer customer = this.getPersistCustomer();//用户
		int skuId = obj.getInt("skuId");
		return orderservice.createDirectly(prodAmount,addressId,customer,skuId);
	}
	/**
	 * 根据订单填写订单信息，确认订单
	 * @throws IOException 
	 */
	@ResponseBody
	@RequestMapping(value = "confirmOrder", method = RequestMethod.POST,consumes = "application/json")
	public void ConfirmOrder(@RequestBody JSONObject obj) throws IOException{
		BigDecimal orderShipping = shippingservice.getOrderShipping(obj.getInt("orderId"));
		orderservice.ConfirmOrder(obj,orderShipping);
	}
	/**
	 * 通过购物车下单
	 * @throws IOException 
	 */
	@ResponseBody
	@RequestMapping(value = "createByCartitem", method = RequestMethod.POST,consumes = "application/json")
	public void createByCartitem(int shop_id) throws IOException{
		orderservice.createByCartitem(shop_id);
	}
}
