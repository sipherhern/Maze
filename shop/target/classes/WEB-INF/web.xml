<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	id="WebApp_ID" version="3.0">
	<display-name>Archetype Created Web Application</display-name>

	<!-- 欢迎页面 -->
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>default.html</welcome-file>
		<welcome-file>default.htm</welcome-file>
		<welcome-file>default.jsp</welcome-file>
	</welcome-file-list>
	<!-- 上下文监听器 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<!-- Spring 刷新Introspector防止内存泄露 -->
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>
		<!-- 载入Spring ApplicationContext -->
	 <listener>
	  <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	 </listener>
	 
	 <!--  支持session scope的Spring bean  -->
	 <listener>
	  <listener-class>
	   org.springframework.web.context.request.RequestContextListener
	  </listener-class>
	 </listener>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:/applicationContext.xml</param-value>
	</context-param>


	<!-- springMVC -->
	<servlet>
		<servlet-name>spring-mvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:/spring-mvc.xml,classpath:/spring-hibernate.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>spring-mvc</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<session-config>
		<session-timeout>60</session-timeout>
	</session-config>

	<!-- 字符编码过滤器 -->
	<filter>
		<filter-name>CharacterFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CharacterFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	
	<!-- hibernateSession过滤器
	<filter> 
		<filter-name>openSessionInViewFilter</filter-name> 
	<filter-class>org.springframework.orm.hibernate4.support.OpenSessionInViewFilter</filter-class>
	singleSession默认为true，若设为false则便是没用OpenSessionInView 
	<init-param> 
		<param-name>singleSession</param-name> 
		<param-value>true</param-value> 
	</init-param> 
		解决Hibernate的Write operations 
		are not allowed in read-only mode (FlushMode.NEVER/MANUAL):Turn your Session 
		into FlushMode.COMMIT/AUTO or remove 'readOnly' marker from transaction definition.问题
	<init-param> <param-name>flushMode</param-name> 
		<param-value>AUTO</param-value> 
	</init-param> 
		默认景象下，这个Filter会在Spring的bean池中找一个叫做sessionFactory的bean。若是应用了其他名字的SessionFactory，则应当在这里
	<init-param> 
		<param-name>sessionFactoryBeanName</param-name> 
		指定对Spring配置中哪个sessionFactory使用OpenSessionInView
		<param-value>sessionFactory</param-value> 
	</init-param> 
	</filter> 
		<filter-mapping> 
		<filter-name>openSessionInViewFilter</filter-name> <url-pattern>/*</url-pattern> 
	</filter-mapping>


	系统错误转发配置[并记录错误日志] -->
	
	<!--  自动懒加载  -->
	<!-- <filter> <filter-name>OpenSessionInViewFilter</filter-name> <filter-class>org.springframework.orm.hibernate4.support.OpenSessionInViewFilter</filter-class> 
		<init-param> <param-name>sessionFactoryBeanName</param-name> <param-value>sessionFactory</param-value> 
		</init-param> <init-param> <param-name>singleSession</param-name> <param-value>true</param-value> 
		</init-param> <init-param> <param-name> flushMode </param-name> <param-value>AUTO 
		</param-value> </init-param> </filter> -->
</web-app>


